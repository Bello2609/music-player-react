{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","index.js"],"names":["Player","currentSong","setCurrentSong","isPlaying","setIsPlaying","audioRef","setSongInfo","songInfo","songs","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","trackBackground","background","color","getTime","time","Math","floor","slice","className","style","type","min","max","duration","value","onChange","e","currentTime","target","onClick","size","icon","faAngleLeft","faPause","faPlay","pause","faAngleRight","Song","alt","name","src","cover","artist","LibrarySong","songSelectHandler","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","uuidv4","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","onTrackEndHandler","ref","onTimeUpdate","onLoadedMetadata","onEnded","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a21d387a.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faPlay,\r\n    faAngleLeft,\r\n    faAngleRight,\r\n    faPause,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Player = ({\r\n    currentSong,\r\n    setCurrentSong,\r\n    isPlaying,\r\n    setIsPlaying,\r\n    audioRef,\r\n    setSongInfo,\r\n    songInfo,\r\n    songs,\r\n    setSongs,\r\n}) => {\r\n    const activeLibraryHandler = (nextPrev) => {\r\n        const newSongs = songs.map((song) => {\r\n            if (song.id === nextPrev.id) {\r\n                return {\r\n                    ...song,\r\n                    active: true,\r\n                };\r\n            } else {\r\n                return {\r\n                    ...song,\r\n                    active: false,\r\n                };\r\n            }\r\n        });\r\n\r\n        setSongs(newSongs);\r\n    };\r\n    /* EventHandlers */\r\n    const playSongHandler = () => {\r\n        if (isPlaying) {\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n        } else {\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n    };\r\n\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value;\r\n        setSongInfo({ ...songInfo, current: e.target.value });\r\n    };\r\n\r\n    const skipTrackHandler = async (direction) => {\r\n        let currentIndex = songs.findIndex(\r\n            (song) => song.id === currentSong.id\r\n        );\r\n\r\n        if (direction === 'skip-forward') {\r\n            await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n            activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n        }\r\n        if (direction === 'skip-back') {\r\n            if ((currentIndex - 1) % songs.length === -1) {\r\n                await setCurrentSong(songs[songs.length - 1]);\r\n                activeLibraryHandler(songs[songs.length - 1]);\r\n                if (isPlaying) audioRef.current.play();\r\n                return;\r\n            }\r\n            await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n            activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\r\n        }\r\n        if (isPlaying) audioRef.current.play();\r\n    };\r\n\r\n    const trackAnim = {\r\n        transform: `translateX(${songInfo.animationPercentage}%)`,\r\n    };\r\n\r\n    const trackBackground = {\r\n        background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\r\n    };\r\n\r\n    /* Functions */\r\n    const getTime = (time) => {\r\n        return (\r\n            Math.floor(time / 60) +\r\n            ':' +\r\n            ('0' + Math.floor(time % 60)).slice(-2)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{getTime(songInfo.current)}</p>\r\n                <div style={trackBackground} className=\"track\">\r\n                    <input\r\n                        type=\"range\"\r\n                        min={1}\r\n                        max={songInfo.duration || 0}\r\n                        value={songInfo.current}\r\n                        onChange={dragHandler}\r\n                    />\r\n                    <div style={trackAnim} className=\"animate-track\"></div>\r\n                </div>\r\n\r\n                <p>{songInfo.duration ? getTime(songInfo.duration) : '0:00'}</p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon\r\n                    className=\"skip-back\"\r\n                    onClick={() => skipTrackHandler('skip-back')}\r\n                    size=\"2x\"\r\n                    icon={faAngleLeft}\r\n                />\r\n                <FontAwesomeIcon\r\n                    className=\"play\"\r\n                    size=\"2x\"\r\n                    icon={isPlaying ? faPause : faPlay}\r\n                    onClick={playSongHandler}\r\n                />\r\n                <FontAwesomeIcon\r\n                    className=\"skip-forward\"\r\n                    onClick={() => skipTrackHandler('skip-forward')}\r\n                    size=\"2x\"\r\n                    icon={faAngleRight}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player;\r\n","const Song = ({ currentSong }) => {\r\n    return (\r\n        <div className=\"song-container\">\r\n            <img alt={currentSong.name} src={currentSong.cover} />\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Song;\r\n","const LibrarySong = ({\r\n    song,\r\n    songs,\r\n    setSongs,\r\n    id,\r\n    setCurrentSong,\r\n    audioRef,\r\n    isPlaying,\r\n}) => {\r\n    const songSelectHandler = async () => {\r\n        setCurrentSong(song);\r\n\r\n        const newSongs = songs.map((song) => {\r\n            if (song.id === id) {\r\n                return {\r\n                    ...song,\r\n                    active: true,\r\n                };\r\n            } else {\r\n                return {\r\n                    ...song,\r\n                    active: false,\r\n                };\r\n            }\r\n        });\r\n\r\n        await setSongs(newSongs);\r\n\r\n        if (isPlaying) audioRef.current.play();\r\n    };\r\n\r\n    return (\r\n        <div\r\n            onClick={songSelectHandler}\r\n            className={`library-song ${song.active ? 'selected' : ''}`}\r\n        >\r\n            <img alt={song.name} src={song.cover} />\r\n            <div className=\"song-description\">\r\n                <h3>{song.name}</h3>\r\n                <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import LibrarySong from './LibrarySong';\r\n\r\nconst Library = ({\r\n    songs,\r\n    setSongs,\r\n    setCurrentSong,\r\n    audioRef,\r\n    isPlaying,\r\n    libraryStatus,\r\n}) => {\r\n    return (\r\n        <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\r\n            <h2>Library</h2>\r\n            <div className=\"library-songs\">\r\n                {songs.map((song) => (\r\n                    <LibrarySong\r\n                        key={song.id}\r\n                        song={song}\r\n                        songs={songs}\r\n                        id={song.id}\r\n                        setSongs={setSongs}\r\n                        setCurrentSong={setCurrentSong}\r\n                        audioRef={audioRef}\r\n                        isPlaying={isPlaying}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Library;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMusic } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\r\n    return (\r\n        <nav>\r\n            <h1>Waves</h1>\r\n            <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n                Library <FontAwesomeIcon icon={faMusic} />\r\n            </button>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from 'uuid';\r\nfunction chillHop() {\r\n    return [\r\n        {\r\n            name: 'Beaver Creek',\r\n            cover:\r\n                'https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg',\r\n            artist: 'Aso, Middle School, Aviino',\r\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=10075',\r\n            color: ['#205950', '#2ab3bf'],\r\n            id: uuidv4(),\r\n            active: true,\r\n        },\r\n        {\r\n            name: 'Daylight',\r\n            cover:\r\n                'https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg',\r\n            artist: 'Aiguille',\r\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=9272',\r\n            color: ['#EF8EA9', '#ab417f'],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: 'Keep Going',\r\n            cover:\r\n                'https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg',\r\n            artist: 'Swørn',\r\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=9222',\r\n            color: ['#CD607D', '#c94043'],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: 'Nightfall',\r\n            cover:\r\n                'https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg',\r\n            artist: 'Aiguille',\r\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=9148',\r\n            color: ['#EF8EA9', '#ab417f'],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: 'Reflection',\r\n            cover:\r\n                'https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg',\r\n            artist: 'Swørn',\r\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=9228',\r\n            color: ['#CD607D', '#c94043'],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: 'Under the City Stars',\r\n            cover:\r\n                'https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg',\r\n            artist: 'Aso, Middle School, Aviino',\r\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=10074',\r\n            color: ['#205950', '#2ab3bf'],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: 'Jazz Cabbage',\r\n            artist: 'Ian Ewing, Strehlow',\r\n            cover:\r\n                'https://chillhop.com/wp-content/uploads/2020/06/49f6e32ca521fbad46a1b281e3893cf6254bf11d-1024x1024.jpg',\r\n            id: uuidv4(),\r\n            active: false,\r\n            color: ['#BC4F49', '#FDF0DE'],\r\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=9363',\r\n        },\r\n        {\r\n            name: 'Lagoons',\r\n            artist: 'Strehlow, Chris Mazuera',\r\n            cover:\r\n                'https://chillhop.com/wp-content/uploads/2020/06/49f6e32ca521fbad46a1b281e3893cf6254bf11d-1024x1024.jpg',\r\n            id: uuidv4(),\r\n            active: false,\r\n            color: ['#BC4F49', '#FDF0DE'],\r\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=8266',\r\n        },\r\n        //ADD MORE HERE\r\n    ];\r\n}\r\n\r\nexport default chillHop;\r\n","import { useState, useRef } from 'react';\n\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport Library from './components/Library';\nimport Nav from './components/Nav';\n\nimport './styles/app.scss';\nimport data from './data';\n\nfunction App() {\n    /* Ref */\n    const audioRef = useRef(null);\n\n    const [songs, setSongs] = useState(data());\n    const [currentSong, setCurrentSong] = useState(songs[0]);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [songInfo, setSongInfo] = useState({\n        current: 0,\n        duration: 0,\n        animationPercentage: 0,\n    });\n    const [libraryStatus, setLibraryStatus] = useState(false);\n\n    const timeUpdateHandler = (e) => {\n        const current = e.target.currentTime;\n        const duration = e.target.duration;\n\n        const roundedCurrent = Math.round(current);\n        const roundedDuration = Math.round(duration);\n\n        const animationPercentage = Math.round(\n            (roundedCurrent / roundedDuration) * 100\n        );\n\n        setSongInfo({\n            ...songInfo,\n            current,\n            duration,\n            animationPercentage,\n        });\n    };\n\n    const onTrackEndHandler = async () => {\n        let currentIndex = songs.findIndex(\n            (song) => song.id === currentSong.id\n        );\n\n        await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n\n        if (isPlaying) audioRef.current.play();\n    };\n\n    return (\n        <div className={`App ${libraryStatus ? 'library-active' : ''}`}>\n            <Nav\n                libraryStatus={libraryStatus}\n                setLibraryStatus={setLibraryStatus}\n            />\n            <Song currentSong={currentSong} />\n            <Player\n                setIsPlaying={setIsPlaying}\n                isPlaying={isPlaying}\n                currentSong={currentSong}\n                setCurrentSong={setCurrentSong}\n                songs={songs}\n                audioRef={audioRef}\n                setSongInfo={setSongInfo}\n                songInfo={songInfo}\n                setSongs={setSongs}\n            />\n            <Library\n                libraryStatus={libraryStatus}\n                songs={songs}\n                setCurrentSong={setCurrentSong}\n                audioRef={audioRef}\n                isPlaying={isPlaying}\n                setSongs={setSongs}\n            />\n            <audio\n                ref={audioRef}\n                onTimeUpdate={timeUpdateHandler}\n                onLoadedMetadata={timeUpdateHandler}\n                src={currentSong.audio}\n                onEnded={onTrackEndHandler}\n            ></audio>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}